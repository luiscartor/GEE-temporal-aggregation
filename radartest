/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var North_Wales = /* color: #d63000 */ee.Geometry.Polygon(
        [[[-4.01275634765625, 53.37028208616266],
          [-4.10064697265625, 52.831042628047356],
          [-3.35357666015625, 52.7313647635022],
          [-2.74932861328125, 53.02806217301498],
          [-3.13934326171875, 53.38502804902532],
          [-4.00177001953125, 53.39485585446581]]]),
    test_area = /* color: #98ff00 */ee.Geometry.Polygon(
        [[[-3.6199951171875, 53.248905518153315],
          [-3.5540771484375, 53.265336258629475],
          [-3.5540771484375, 53.30802665091056],
          [-3.636474609375, 53.301461674349845]]]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// Load the Sentinel-1 ImageCollection.
var sentinel1 = ee.ImageCollection('COPERNICUS/S1_GRD');

// Filter VH, IW
var s1_2016 = sentinel1
  // Filter to get images with VV and VH dual polarization.
  .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VH'))
  .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV'))
  // Filter to get images collected in interferometric wide swath mode.
  .filter(ee.Filter.eq('instrumentMode', 'IW'))
  // select relative orbit number
  .filter(ee.Filter.eq('relativeOrbitNumber_start', 52))
  //select slice
  //.filter(ee.Filter.eq('sliceNumber', 5))
  // Filter time to images form 2017
  .filterDate('2016-01-01', '2016-12-31')
  // Filter to orbitdirection Descending
  .filter(ee.Filter.eq('orbitProperties_pass', 'DESCENDING'));
  
  
var vh_2016 = s1_2016.select('VH');
var vv_2016 = s1_2016.select('VV');

// Set area of interest
var roi = North_Wales;

// Filter to roi
var vh_roi = vh_2016.filterBounds(roi);
var vv_roi = vv_2016.filterBounds(roi);

//var vhDescending = vh_roi.filter(ee.Filter.eq('orbitProperties_pass', 'DESCENDING'));
//var vhAscending = vh_roi.filter(ee.Filter.eq('orbitProperties_pass', 'ASCENDING'));
// Load S2 1-C input imagery.
var S2 = ee.ImageCollection('COPERNICUS/S2')
  // Filter to get only one year of images.
  .filterDate('2016-03-01', '2016-05-30')
  // Filter to get only images under the region of interest.
  //.filter(ee.Filter.eq('WRS_PATH', 204))
  //.filter(ee.Filter.eq('WRS_ROW', 23))
  // Sentinel cloud mask is less selective than Landsat, so some people pre filter by relatively cloud free images
  //.filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 20))
  .filterBounds(North_Wales)
  //.first()
  .select(['B2', 'B3','B4', 'B5', 'B6','B7','B8','B11','B12']);

// Create an image time series chart.
var chart = ui.Chart.image.series({
  imageCollection: vv_roi.select('VV'),
  region: test_area
});


// Create 3 single images that can be displayed as one 3-band composite image
// Calculate the median for different times and polarisations
var comp1 = vh_roi.filterDate('2016-04-01', '2016-05-28').median();
var comp2 = vh_roi.filterDate('2016-06-01', '2016-08-30').median();
var comp3 = vv_roi.filterDate('2016-04-01', '2016-05-28').median();

// merge the 3-bands as single composite
var composite = ee.Image.cat ([comp1, comp2, comp3]).focal_median();


// for land applications
Map.addLayer(composite, {min: [-20, -20, -15], max: [-6, -6, 0]}, 'composite');
// for ocean applications
// Map.addLayer(composite2, {min: [-30, -25, -20], max: [-20, -20, -10]}, 'composite');
// Add the chart to the map.
Map.addLayer(S2, {bands: ['B5', 'B4', 'B3'],max: 2048}, 'S2');


chart.style().set({
  position: 'bottom-right',
  width: '500px',
  height: '300px'
});
//Map.add(chart);

// Outline the region and centre on the map.
var sfLayer = ui.Map.Layer(test_area, {color: 'FF0000'}, 'test_area');
Map.layers().add(sfLayer);
Map.setCenter(-3.5, 53.2, 8);

// Create a label on the map.
var label = ui.Label('Click a point on the chart to show the image for that date.');
Map.add(label);

// When the chart is clicked, update the map and label.
chart.onClick(function(xValue, yValue, seriesName) {
  if (!xValue) return;  // Selection was cleared.

  // Show the image for the clicked date.
  var equalDate = ee.Filter.equals('system:time_start', xValue);
  var image = ee.Image(vh_roi.filter(equalDate).first());
  var s2Layer = ui.Map.Layer(image, {
    min: -25,
    max: 0.0,
  });
  Map.layers().reset([s2Layer]);

  // Show a label with the date on the map.
  label.setValue((new Date(xValue)).toUTCString());
});


