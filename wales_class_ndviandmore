var walespoint = /* color: #98ff00 */ee.Geometry.Point([-3.541717529296875, 53.1253499619115]);
var S1area = /* color: #d63000 */ee.Geometry.Polygon(
        [[[-4.25994873046875, 52.97847790594886],
          [-3.97979736328125, 51.90875993271863],
          [-3.5322682632632905, 51.93943160087239],
          [-3.3887907575058307, 51.968055159146736],
          [-3.28765869140625, 52.125120950434145],
          [-3.07891845703125, 52.908964224129605],
          [-3.47991943359375, 53.00988788760457],
          [-3.73809814453125, 52.980131632468]]]),
    test_area = /* color: #98ff00 */ee.Geometry.Polygon(
        [[[-3.6199951171875, 53.248905518153315],
          [-3.5540771484375, 53.265336258629475],
          [-3.5540771484375, 53.30802665091056],
          [-3.636474609375, 53.301461674349845]]]);
          
var S2_spr = ee.ImageCollection('COPERNICUS/S2')
  // Filter to get only one year of images.
  .filterDate('2016-10-01', '2017-09-30')
  .filterBounds(S1area)
  .select(['B2', 'B3','B4', 'B5', 'B6','B7','B8','B11','B12']);

// Load Landsat 5 input imagery.
//var landsat1 = ee.Image(ee.ImageCollection('LANDSAT/LC08/C01/T1')
var landsat_spr = ee.ImageCollection('LANDSAT/LC08/C01/T1_SR')
  // Filter to get only one year of images.
  .filterDate('2016-10-01', '2017-09-30')
  // Filter to get only images under the region of interest.
  .filter(ee.Filter.eq('WRS_PATH', 204))
  //.filter(ee.Filter.rangeContains("PATH", 23, 24))
  .filterBounds(S2_spr.geometry())
  .map(function(img){
    var mask = img.select(['pixel_qa']).bitwiseAnd(32).eq(0)
    return img.updateMask(mask)
    })
  .select(['B1', 'B2', 'B3','B4', 'B5', 'B6','B7']);
  
var landsat_win = ee.ImageCollection('LANDSAT/LC08/C01/T1_SR')
  // Filter to get only one year of images.
  .filterDate('2016-10-01', '2017-02-28')
  // Filter to get only images under the region of interest.
  .filter(ee.Filter.eq('WRS_PATH', 204))
  //.filter(ee.Filter.rangeContains("PATH", 23, 24))
  .filterBounds(S2_spr.geometry())
  .map(function(img){
    var mask = img.select(['pixel_qa']).bitwiseAnd(32).eq(0)
    return img.updateMask(mask)
    })
  .select(['B1', 'B2', 'B3','B4', 'B5', 'B6','B7']);

// NDVI Index
var ndvi_spr = landsat_spr.map(function(image) {
  return image.normalizedDifference(['B5', 'B4']);
});
var ndvi_win = landsat_win.map(function(image) {
  return image.normalizedDifference(['B5', 'B4']);
});

// NDMI Index
var ndmi_spr = landsat_spr.map(function(image) {
  return image.normalizedDifference(['B6', 'B5']);
});
var ndmi_win = landsat_win.map(function(image) {
  return image.normalizedDifference(['B6', 'B5']);
});

var ndvi_spr_median = ndvi_spr.reduce(ee.Reducer.mean()).multiply(10000).add(10000);//.clip(landsat.geometry());//.reproject('EPSG:4326',null,30);
var ndvi_spr_var = ndvi_spr.reduce(ee.Reducer.variance());
var ndmi_spr_median = ndmi_spr.reduce(ee.Reducer.median());
var ndmi_spr_var = ndmi_spr.reduce(ee.Reducer.variance());

var ndvi_win_median = ndvi_win.reduce(ee.Reducer.median())//.clip(landsat.geometry());//.reproject('EPSG:4326',null,30);
var ndvi_win_var = ndvi_win.reduce(ee.Reducer.variance());
var ndmi_win_median = ndmi_win.reduce(ee.Reducer.median());
var ndmi_win_var = ndmi_win.reduce(ee.Reducer.variance());

var dataset_ndvi = ndvi_spr_median.clip(S2_spr.geometry());
Map.addLayer(dataset_ndvi, {bands: ['nd_mean'],min:0,max:20000}, 'dataset_ndvi');
Export.image.toDrive({
  image: dataset_ndvi.int16(),
  //region: S2_spr.geometry().bounds(),
  description: 'p13',
  scale: 30,
  crs : 'EPSG:27700',
  // Dimensions for 30m scale
  dimensions:"399960x5690220",
  // Max pixels for 30m scale
  maxPixels: 399960*5690220
 
});




// Elevation layer
var dem = ee.Image('USGS/SRTMGL1_003').clip(landsat_spr.geometry())//.reproject(proj);

// Distance to sea layer
var distsea = ee.Image('users/luiscartor/distsea').int().clip(landsat_spr.geometry())//.reproject(proj);

// Classification training data
var trainingraster = ee.Image('users/luiscartor/wales_c35training_NAs').int();

//Training using sample regions to sample 10000 for each class
var training = ndvi_spr_median.addBands(ndmi_spr_median).addBands(ndvi_win_median).addBands(ndmi_win_median).addBands(dem).addBands(distsea).addBands(trainingraster).stratifiedSample({
  numPoints: 4000,
  classBand: 'b1_1',
  region: landsat_spr.geometry(),
  seed:0,
  scale:30,
  projection: 'EPSG:4326',
  //tileScale: 4
});
Export.table.toDrive(training)

// Make a Random Forest classifier and train it.
var classifier = ee.Classifier.randomForest(30)
    .train(training, 'b1_1');
    
Export.table.toDrive(ee.FeatureCollection(ee.Feature(null, {'matrix': classifier.confusionMatrix()})));


// Classify the input imagery.
var classified = ndvi_spr_median.addBands(ndmi_spr_median).addBands(ndvi_win_median).addBands(ndmi_win_median).addBands(dem).addBands(distsea).classify(classifier);

//Sample used for validation
var testsample = ndvi_spr_median.addBands(ndmi_spr_median).addBands(ndvi_win_median).addBands(ndmi_win_median).addBands(dem).addBands(distsea).addBands(trainingraster).stratifiedSample({
  numPoints: 100,
  region: landsat_spr.geometry(), //If region not specified: issues with projections!
  classBand: 'b1_1',
  seed:1, // Different seed from training sample
  scale:30,
  projection: 'EPSG:4326',
  //tileScale: 4
}).filter(ee.Filter.neq('b1_1', null)); // Filter the result to get rid of any null pixels.


// Accuracy assessment
//print(testsample)
var trainAccuracy = testsample.classify(classifier).errorMatrix('b1_1', 'classification');
print('Resubstitution error matrix: ', trainAccuracy);
print('Training overall accuracy: ', trainAccuracy.accuracy());
print('Training kappa: ', trainAccuracy.kappa());


// Define a palette for the classification.
var palette = [
  //'FFFFFF', // non
  'ff0000', // broadleaved f
  '008000', // evergreen
  '8b4513', // arable
  '7CFC00', // improved
  'FFA500', // rough
  '66CDAA', // neutral
  '2E8B57', // calcareous
  '808000', // acid
  'FFFF00', // fen
  '800080', // heather
  'EE82EE', // heather grassland
  '008080', // bog
  '40E0D0', // montaine
  'B0C4DE', // bare rock
  '00008B', // sea
  '0000FF', // water
  'B8860B', // supra
  'B8860B', // supra
  'F0E68C', // litoral
  'F0E68C', // litoral
  '9370DB', // marsh
  '000000', // urban
  'A9A9A9', // semi urban
];


Map.centerObject(walespoint, 8);
//Map.addLayer(landsat, {bands: ['B4', 'B3', 'B2']}, 'landsat masked');
//Map.addLayer(ndvi, {palette: palette, min:-1, max: 1},'ndvi');
//Map.addLayer(ndvi_mean,{palette: palette, min:-1, max: 1},'ndvi_mean');
//Map.addLayer(composite, {bands: ['nd_mean','elevation','b1']},'composite');

//Map.addLayer(trainingraster,{palette: palette, min: 1, max: 23})
//Map.addLayer(classified, {palette: palette, min: 1, max: 23}, 'classification');
//Export.image.toDrive({
//    image: classified,
//    description: 'wales_classification_ndvindmi_medians_twodates',
//    scale: 30,
//    maxPixels: 198317376
//    //region: geometry
//});

